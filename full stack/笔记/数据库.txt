
# sql 特殊敏感字段需要用上单引号``括起来 ，普通的可以省略
 一.用户
 
创建：

CREATE USER '用户名'@'主机'  [IDENTIFIED ] BY [ PASSWORD ];



删除：

DROP USER '用户名'@'主机'


二.权限

1.野路子直接改mysql.user

2.正规操作

	授予：
	
	GRANT 权限 ON 库/表/列/  *.*（所有库所有表） TO '用户名'@'主机' IDENTIFIED BY '密码' [WITH GRANT OPTION];

	GRANT  select , insert, update, create, drop  on  vtdc.employee  to  joe@'10.163.255.87'  identified  by '123';

   GRANT  All privileges  on  template_db.*  to  'template'@'%';

	> flush privileges; 更新权限
	
	权限：ALL、SELECT、SELECT,UPDATE
  库.表：库.*、*.*
  主机：ip、域名、'%'（任意）
  WITH GRANT OPTION：用户可以继续分发权限（仅限他有的）
  
  回收：
  
   REVOKE 权限 ON 库/表/列 FROM '用户名'@'主机'
   
   检查权限
   
    show grants for '用户名'@'主机;
   


三.备份

1. mysqldump 命令

 >mysqldump 库/表 -u用户 -p 备份 某个数据库/表
 
 >mysqldump --all-databases -u root -p  备份所有数据库

 >gzip 文件 将文件 gzip 压缩

2.定时执行操作
  # watch ls -l 监听文件变化
  
 > crontab xxx #xxx为写的crontab 执行文件 txt就可以
  
 > cronttab -l #所有的定时执行任务
  
 > crontab -e 编辑定时执行任务

  crontab格式：
  
  > * * * * *  脚本地址      分钟、小时、日、月、星期

  30 * * * *  /root/a.sh    每个小时的30分执行——00:30, 01:30, ... 23:30
  */2 * * * *             每隔两分钟执行一次
  * * 1 * *               每个月的1号
  
----------------------------------------------------------------
  备份脚本
  
1.获取时间 

#date 命令 查看时间 根据后续参数 按格式输出

d=`date +"%Y%m%d%H%M"`

2.导出数据库

mysqldump -u root -p xxx > /mysql_bak/xxx$d.sql

3.压缩

gzip /mysql_bak/xxx$d.sql

4.传输到其他服务器

scp /mysql_bak/xxx$d.sql.gz root@192.168.183.131:/root/

-------------------------------------------------------------------------

4.恢复

CREATE DATABASE IF NOT EXISTS test_db_char DEFAULT CHARACTER SET utf8

mysql [库名] -u root  -p  < xxx.sql #导入

5. 修改端口 重启mysql

> vim /etc/mysql.cnf
 如果失败，需要关闭 selinux 再尝试
> /usr/sbin/setenforce 0

//也可以使用selinux上添加端口的方式****
-----------------------------------------------------------------------------------------------------
主从复制：




1. 一般Linux中的MySQL配置文件都在/etc/my.cnf(windows中的配置文件为mysql.ini)

[mysqld]

log-bin=mysql-bin 开启二进制日志，因为本质就是靠而二进制文件还原数据

server-id= xxx



注意：二进制日志必须开启，因为数据的同步实质上就是其他的MySQL数据库服务器将这个数据变更的二进制日志在本机上再执行一遍。
例如：
    192.168.183.111  为主数据库服务器

    192.168.183.112  为从数据库服务器


2. 在主数据库中创建一个从数据库主机中可以登录的MySQL用户

            用户：slave112

            密码：slave112

mysql>GRANT REPLICATION SLAVE ON *.* TO 'slave112'@'192.168.183.112' IDENTIFIED BY 'slave112';

mysql>FLUSH PRIVILEGES;

3. 查看主数据库服务器二进制文件名与位置

 mysql>SHOW MASTER STATUS;


 File                        Position

 mysql-bin.000001               837


4.告知从数据库服务二进制文件名与位置

在192.168.183.112中执行：

mysql> CHANGE MASTER TO MASTER_HOST='192.168.183.111',
MASTER_USER='slave112',
MASTER_PASSWORD='slave112',
MASTER_LOG_FILE='mysql-bin.000001',
MASTER_LOG_POS=837 ;


5.

 在192.168.95.112 从数据库中

mysql>START SLAVE;   #开启复制

mysql>SHOW SLAVE STATUS\G   #查看主从复制是否配置成功

当看到：
    Slave_IO_Running: YES

    Slave_SQL_Running: YES

表明状态正常，主从备份设置完成。