
--------------------------------------------------------------------------------
vi基本使用：
1.编辑模式    按“i”
2.命令模式    按“esc”

yum install 安装
yum erase 卸载
yum search 搜索
yum clean all 清理源缓存

-------------------------------------------------------------
ps -ef | grep xxx  搜索与 xxx 有关的进程

find /xxx -name init   (精准搜索，名字必须为 init 才能搜索的到)

find /xxx -iname init   (精准搜索，名字必须为 init或者有字母大写也能搜索的到)

find /xxx -name *init  (模糊搜索，以 init 结尾的文件或目录名) 

find /xxx -name init??? (模糊搜索，？ 表示单个字符，即搜索到 init___)

在文件中搜寻字符串匹配的行并输出

　　grep -iv 指定字符串 文件

　　　　 -i 不区分大小写

　　　　 -v 排除指定字符串

	范例：查找 /root/install.log 文件中包含 mysql 字符串的行，并输出

　　　　grep mysql /root/install.log

多与管道符 | 结合使用

kill -9 pid 杀死进程

cat xxx 窗口输出

linux 重定向符 讲输出/输入 重定向到某个文件

程序 > 文件

程序 < 文件

异常流 程序 >文件1>文件2

linux ~ 符号 代表home目录 root用户也就是root目录 并不是/根目录

linux 可执行文件在usr/bin下

chmod +x xxx.sh 给某个shell脚本加执行权限

--------------------------------------------------------------------------------------


mysqld  服务端 命令

mysql    客户端 命令


--------------------------------------------------------------------------------
minimual 版

一、调整网卡
1.配置网卡
vi /etc/sysconfig/network-scripts/ifcfg-ens33(具体名字依据vm)
> ONBOOT=yes

> ping 地址 检查网络连通情况

2.保存退出pin
  :wq

  ps:直接退出
  :q! 

3.重启 || 重启网络
  > systemctl restart network

  查看网络信息
  >ip a s 

二、用putty连接服务器(ssh客户端)

  ps putty 选中及复制

  ps putty 时常断开 connection 里的keep session active a设置一个时间 例如 30 单位ms 心跳包检测

  ps 改动东西以后要 save 保存一下 之后才会仍有用

三、系统升级

  yum update

四、IP地址及安装一些必备小软件
  yum install net-tools unzip vim wget -y

#wget 下载用的
#wget url  访问一个网址 会下载下来xxx.html
#> vi /m xxx.html 查看

#curl 下载直接在界面打开
#curl url 访问页面

--------------------------------------------------------------------------------

  1. 配置完整网络
>vi /etc/sysconfig/network-scripts/ifcfg-ens33

BOOTPROTO 改成static

TYPE=Ethernet
BOOTPROTO=dhcp
NAME=ens33
UUID=7b41febe-a6a8-4f52-929b-d5121981c23d
DEVICE=ens33
ONBOOT=yes 

---------------------------------------------------------------

TYPE=Ethernet
BOOTPROTO=static // 启动协议 static固定ip
IPADDR=192.168.183.130 //ip
NETMASK=255.255.255.0 //子网掩码
GATEWAY=192.168.183.2 //网关 不能乱配 需要在vm 查看 ： 编辑->虚拟网络编辑器->NAT设置 / 或 > netstat -rn
NAME=ens33 //网卡名称
UUID=7b41febe-a6a8-4f52-929b-d5121981c23d
DEVICE=ens33
ONBOOT=yes //网络随机启动

-----------------------------------------------------------------------------------
  2.改dns

设置DNS：
vi /etc/resolv.conf

 nameserver  网关 //将网关设为dns
 :wq
> systemctl restart network
--------------------------------------------------------------------------------


常用配合完成

clone 虚拟机以备后用 链接克隆即可



--------------------------------------------------------------------------------

一、nginx
1.加repo
To add NGINX yum repository, create a file named：

 /etc/yum.repos.d/nginx.repo

 [nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
gpgcheck=0
enabled=1

2.安装nginx
yum install nginx

3.启动nginx
  > systemctl start nginx     #启动

  > systemctl enable nginx    #设置随机启动

4.更新（按需）

yum update nginx

二、开放端口

 1.添加规则 防火墙

    添加端口（http默认80）   80/tcp协议链接       常驻 重启仍在

 > firewall-cmd --add-port=80/tcp --permanent

 2.重载规则

 >firewall-cmd --reload

三、配置

  1.修改
  > vi /etc/nginx/nginx.conf          #整个nginx的全局配置文件

   worker_processes  auto;            # 根据系统性能自动决定工作进程数量
   sendfile          on;              #绕过cpu直接向网卡发送数据 性能高
   gzip              on;              #开启gzip压缩

  2.重载配置

  > nginx -s reload   #不停机更新


  3.多站点配置(按需)

  > /etc/nginx/conf.d/*.conf（*为任意站点名称） #一个ngnix 配属多个站点的情况下为其单独设置配置文件
   
  #/etc/nginx/conf.d/default.conf  单独配置文件样例
  
  > cd /etc/nginx/conf.d
  
  > cp  default.conf  xxx.d # 将 default.conf 复制一份 命名为xxx

	server_name   域名 ip (两个都加 则  域名 ip 都能访问到)

	location  / {  #  / 根路径对应的配置
		
		root    /usr/share/nginx/html      静待文件目录位置
		index   index.html index.htm       该路径默认访问文件
	}
	
        error_page  404      /404.html           页面访问不到返回的404页面  

	#proxy_pass api 访问代理。。。      

四、web文件

  跟着root字段走：/usr/share/nginx/html/ #默认位置
  
五、nginx 转发

情况1  接口直接转发

1.打开开关 selinux

  setsebool httpd_can_network_connect true
  
2.配置nginx

  location /api {
    proxy_pass http://localhost:8080$uri;
  }
  
  
情况2 先尝试读取静态文件 不成功 再去请求服务接口 用于与静态文件缓存

 $uri 为全局变量  http://127.0.0.1:8080/index.html   $uri 为 /index.html 
  
   location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri @node; 
    }

    location @node {
      proxy_pass http://127.0.0.1:8080$uri;
    }

    #location /api {
    #  proxy_pass http://127.0.0.1:8080$uri;
    #}


--------------------------------------------------------------------------------

mysql（mariadb）

1、加repo ：/etc/yum.repos.d/MariaDB.repo

 [mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/10.4/centos7-amd64
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1

----------------------------------
 [mariadb]
name = MariaDB-10.4.8
baseurl=http://mirrors.aliyun.com/mariadb//mariadb-10.4.8/yum/centos7-amd64
# alternative: baseurl=http://mirrors.aliyun.com/mariadb//mariadb-10.4.8/yum/centos7-amd64
gpgcheck=0

-------------------------------------------------------

2、安装

yum install MariaDB-server            #MariaDB-client 按需

配置

 1.查看 mysqld --verbose --help | more 分屏显示 主要是查找配置文件所在

  >/etc/my.cnf

 2.改配置

  vim /etc/my.cnf

[client-server]  #通用配置

port=3306 #端口

[mysqld]  #服务端配置

data=/var/lib/mysql/ #数据存在哪 任意 选此处是 早期规范
user=mysql       #设置进程用户 默认是 root 不安全
log-basename=mysqld #log文件名称 在 /var/lib/mysql/ 下


  3.数据库初始化

  >mysql_install_db

 # ps: >mysql_upgrade 若需要修改配置

  4.启动mysql

  systemctl start mariadb

  systemctl enable mariadb

  5.数据库安装

  > mysql_secure_installation

  Switch to unix_socket authentication #开启socket的本地验证 禁止root账户的远程登录 安全
   Y

  Change the root password?
   随便

  Remove anonymous users?
   Y

  Disallow root login remotely?
   Y
  
  Remove test database and access to it?
   Y

  Reload privilege tables now?
   Y

  6.登录到数据库
   mysql -uroot -p  #-uroot root用户 -p 验证密码登录

   # mysql  ip:port -uroot -p  输入远程ip和端口 登录远程mysql

  *7.导入数据库

	sql命令：以分号 ；结尾
       > show databases ； 显示数据库

	> use xxx  ；切换数据库
	
	> show tables  ；显示表
	
	>create database if not exists meituan default character set = 'utf8' ;#创建数据库 并制定字符集
	
	
	

   i.传输文件到服务器

    scp 传输协议  winscp


  mysql xxx -uroot -p < /root/xxx.sql  #以root身份登录 将xxx路径下的 sql文件 导入xxx数据库



--------------------------------------------------------------------------------

nodejs怎么安装

1.包管理器
2.下载源码编译

下载源码编译

方案一（不完整）

1.下载源码

  找到“Linux Binaries (x64)”，复制地址

  > wget 地址

2.解压

  tar -xvf node-v10.16.3-linux-x64.tar.xz

  # -xvf : x:解压，v:过程可见（慢点），f:输出文件名

3.移动

  mkdir -p /usr/local/lib/nodejs

  mv node-v10.16.3-linux-x64 /usr/local/lib/nodejs

  #修改系统环境变量 临时添加 node命令可用 但重启就失效

  export PATH=/usr/local/lib/nodejs/node-v10.16.3-linux-x64/bin:$PATH

方案二

1.安装nvm

  https://github.com/nvm-sh/nvm/blob/master/README.md

  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
   
  # 其实是给 /root/.bashrc 添加脚本

  exist

  关闭命令行工具 重进 生效
  
2.使用nvm安装node相应版本

  > nvm install node版本

  > nvm use node版本

--------------------------------------------------------------------------------

ln -s  软连接相当于快捷键方式 / 另有 硬链接 完整复制一份 极少用 跨设备可能需要

sudo ln -s  /usr/local/lib/nodejs/node-xxx/bin/npx  usr/bin/npx  将node的安装 链接到bin下 这样所有用户就能共享了
sudo ln -s  /usr/local/lib/nodejs/node-xxx/bin/npm  usr/bin/npm
sudo ln -s  /usr/local/lib/nodejs/node-xxx/bin/node  usr/bin/node
--------------------------------------------------------------------------------

安装redis

1.安装依赖库

  yum install tcl gcc make -y

2.下载源码包

  进官网->download->wget

  wget http://download.redis.io/releases/redis-5.0.5.tar.gz

3.解压 #.gz 结尾用 -z

  tar -zxf redis-5.0.5.tar.gz

 > cd redis-xxx  #进入解压后的redis包

 > cd deps

 > make hiredis lua jemalloc linenoise      #make 依赖 hiredis 高性能版 lua 一个脚本 jemalloc分配内存 linenoise通知工具

 > cd .. #退回redis 根目录
 
 > make  #make 整个redis项目

 > make install 安装redis

 > cd utils 
 
 > ./install_server.sh # 运行服务脚本



# make test 按需 测试
# make 时虽然麻烦 但会去检测具体安装设备的性能 根据情况优化 所以其实比拿来主义更能因地制宜

4.配置 问题



  Please select the redis port for this instance:	指定一个端口 默认6379

  Please select the redis config file name		指定一个配置文件

  Please select the redis log file name			指定一个日志文件

  Please select the data directory for this instance	指定磁盘备份文件的位置

  Please select the redis executable path		可执行文件放哪里

# ps -ef | grep redis    查看 redis 进程是否启动成功

#
#Port           : 6379
#Config file    : /etc/redis/6379.conf
#Log file       : /var/log/redis_6379.log
#Data dir       : /var/lib/redis/6379
#Executable     : /usr/local/bin/redis-server
#Cli Executable : /usr/local/bin/redis-cli
#

 5.设置随机启动

   systemctl enable redis_xxx  # xxx 为redis端口号

  #启动redis需要带配置文件 
> redis-server /etc/redis/xxx.conf  # xxx 为redis端口号 默认配置的位置

# 完成


--------------------------------------------------------------------------------

redis 集群原理：k-v对 存储数据 要求最少6个redis进程
  
redis 会定时 一分钟 磁盘备份数据 所以停机重启数据仍在但是一分钟能的没能来得及存储

1. 根据key进行散列crc计算 然后与 常数16384 N进行模运算 等到的值 根据预先分配的处理区间  对应到具体redis 服务器

2 . master/slaver 主从服务进程 交叉备份  master +slaver ，master挂了slaver顶上

	master     	slaver .... slaver可以交叉备份多层 按需 

    	0		2
	
	1		0

	2		1

3.
redis弱点——redis无法保证一致性的

 1.set操作如果主节点成功，就会success

 2.主节点自动去同步，如果没同步完主节点就崩溃则同步失败

 3.获取会得到失败备份以前的数据，以为slaver 未收到新的同步数据

为啥：为了性能考虑


解决不一致性：

 1.关键数据——不用redis

 2.set成功之后不认为成功，get确认一下

4.

某些或单个key 极高热度 可以为其单独配置集群

--------------------------------------------------------------------------------

redis 集群搭建 手动方案

1.克隆 修改克隆机的ip  重启网络

2. ping 一下 确认互通

3.配置

 home 下

> vim redis.conf  创建配置文件

port 7000 #端口7000 # redis 会开两个端口 一个是指定的7000  一个是 redis专用数据通信端口常量10000 + port即17000 用于redis命令通信

protected-mode no  #关闭保护模式——不带密码启动

cluster-enabled yes  #集群特性启用

cluster-config-file nodes.conf  #存储集群节点信息配置文件——所有节点会互相同步

cluster-node-timeout 5000  #节点存活时间——超过5s没有心跳自动删除节点并广播 单位ms 经验值5秒

appendonly yes  #只追加 不删除

4.检查是否存活其他 redis 进程 kill

> ps -ef|grep redis

> kill -9 pid

5.集群间传递文件

#ssh   登录到另一台主机上，执行命令

#scp  把文件发送给另一台主机；从另一台主机上拉取文件

scp 源文件 目标

# 格式：scp 文件 用户名@ip:远程目录

scp redis.conf root@192.168.183.132:/root/

6. slaver从服务创建

> cp redis.conf  redis2.conf # 复制一份配置

> vim redis2.conf  #修改slaver 的port 7001 以及cluster-config-file nodes2.conf 每个进程独有的配置才需要改

7.开启redis集群节点防火墙开放端口

> firewall-cmd --add-port=7000/tcp --permanent

> firewall-cmd --add-port=17000/tcp --permanent

> firewall-cmd --add-port=7001/tcp --permanent

> firewall-cmd --add-port=17001/tcp --permanent

> firewall-cmd --reload


8. 启动redis 主从服务 

>redis-server ./redis.conf & # 有&符 会让进程与窗口脱钩 能够继承敲命令
>redis-server ./redis2.conf &

9. 单独再开启集群控制机 不单独开启也行 但是便利进行控制


10.主控机启动集群：

>redis-cli --cluster create 192.168.183.131:7000 192.168.183.131:7001 192.168.183.132:7000 192.168.183.132:7001 192.168.183.133:7000 192.168.183.133:7001 --cluster-replicas 1
                            集群各节点主从IP及端口
--cluster	集群配置

create		创建

--cluster-replicas 1	集群冗余 1 每个master 一个slaver服务

>redis-cli -c -h xxx -p 7000 # xxx 为集群节点ip -c 表示集群方式登录

> set 'xxx' xxx # k-v 测试

* 集群创建失败：

  把所有进程杀了，集群节点nodes文件删了，重启所有服务器，然后重新搞

























