{"version":3,"sources":["rules/index.js","serviceWorker.js","store/state.js","components/Index/IndexHome.js","components/Index/IndexTeam.js","components/Index/IndexGoods.js","store/actions.js","store/reducers.js","store/index.js","pages/Login.js","pages/Index.js","index.js","App.js"],"names":["module","exports","username","required","message","min","max","type","pattern","password","Boolean","window","location","hostname","match","token","localStorage","getItem","token_expires","authority","JSON","parse","Form","create","props","form","resetFields","getFieldDecorator","validateFields","useState","visible","setVisible","createShop","useMapAction","useContext","ctx","onClick","title","onOk","console","log","error","values","then","res","success","catch","err","onCancel","Item","rules","placeholder","main","Axios","baseURL","headers","register","payload","dispatch","post","data","login","setItem","stringify","getMenus","state","menus","icon","path","exact","component","IndexHome","IndexTeam","IndexGoods","keys","Object","map","menu","includes","filter","shop","setToken","React","createContext","reducerWraper","action","reducers","history","className","alert","push","Sider","Layout","Content","Footer","setMenus","useEffect","style","minHeight","collapsible","theme","mode","defaultSelectedKeys","pathname","ev","key","textAlign","moment","locale","ReactDOM","render","useReducer","initState","Provider","value","name","actions","useMapReducer","children","Index","Login","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b692dc2.chunk.js","sourcesContent":["module.exports = {\r\n    username: [\r\n        {required: true, message: '用户名必须填写'},\r\n        {min: 4, message: '用户名最少4个字'},\r\n        {max: 32, message: '用户名最长32个字'},\r\n        {type: 'string', pattern: /^\\w{4,32}$/, message: '用户名必须仅包含数字字母、下划线'}\r\n    ],\r\n    password: [\r\n        {required: true, message: '密码必须填写'},\r\n        {min: 6, message: '密码长度最少6'}\r\n    ]\r\n\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\r\n    token: localStorage.getItem('token'),\r\n    token_expires: localStorage.getItem('token_expires'),\r\n    authority: JSON.parse(localStorage.getItem('authority'))\r\n}","import React, {useState, useContext} from 'react';\r\nimport {Button, Modal, Form, Input, message} from \"antd\";\r\nimport {ctx} from \"../../store\";\r\n\r\nconst IndexHome = (props) => {\r\n    const {form: {resetFields, getFieldDecorator, validateFields}} = props;\r\n    const [visible, setVisible] = useState(false);\r\n    const {useMapAction} = useContext(ctx);\r\n    const createShop = useMapAction('createShop');\r\n\r\n    function cShop() {\r\n        console.log(\"create shop\");\r\n        validateFields((error, values) => {\r\n            if (error) console.log(error);\r\n            else {\r\n                console.log(values);\r\n                createShop(values).then(res => {\r\n                    message.success('创建成功');\r\n                    setVisible(false);\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                    message.error('创建失败');\r\n                })\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={() => setVisible(true)}>创建店铺</Button>\r\n            <Modal title=\"添加\" visible={visible} onOk={cShop} onCancel={() => {\r\n                setVisible(false);\r\n                resetFields();\r\n            }}>\r\n                <Form>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('shopName', {\r\n                            rules: [\r\n                                {required: true, message: '店铺名称必须填写'}\r\n                            ]\r\n                        })(\r\n                            <Input type=\"text\" placeholder=\"请输入店铺的名称\"/>\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('address', {})(\r\n                            <Input type=\"text\" placeholder=\"请输入店铺的地址\"/>\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('tel', {})(\r\n                            <Input type=\"text\" placeholder=\"请输入店铺的电话\"/>\r\n                        )}\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        {getFieldDecorator('opentime', {})(\r\n                            <Input type=\"text\" placeholder=\"请输入店铺的营业时间\"/>\r\n                        )}\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    )\r\n};\r\nexport default Form.create()(IndexHome);","import React from 'react';\r\nimport {Button} from \"antd\";\r\n\r\nexport default ()=>(\r\n  <div>\r\n    <Button type=\"primary\">添加管子理员</Button>\r\n    <Button type='primary'>删除管子理员</Button>\r\n  </div>\r\n);\r\n","import React from 'react';\r\nimport {Button} from \"antd\";\r\n\r\nexport default () => (\r\n    <div>\r\n        <Button type={\"primary\"}>添加商品</Button>\r\n        <Button type={\"primary\"}>编辑商品</Button>\r\n        <Button type={\"primary\"}>删除商品</Button>\r\n    </div>\r\n);\r\n","import Axios from 'axios';\r\nimport IndexHome from \"../components/Index/IndexHome\";\r\nimport IndexTeam from \"../components/Index/IndexTeam\";\r\nimport IndexGoods from \"../components/Index/IndexGoods\";\r\n\r\nconst main = Axios.create({\r\n    // baseURL: 'http://localhost:8083',\r\n    baseURL: 'https://www.soamazing.cn/api',\r\n    headers: {\r\n        token: localStorage.getItem('token')\r\n    }\r\n});\r\n\r\nexport default {\r\n\r\n    async register({dispatch}, payload) {\r\n        let {data} = await main.post('/admin/register', payload);\r\n        return data;\r\n    },\r\n\r\n    async login({dispatch}, payload) {\r\n\r\n        let {data} = await main.post('/admin/login', payload);\r\n        let {token, token_expires, authority} = data;\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('token_expires', token_expires);\r\n        localStorage.setItem('authority', JSON.stringify(authority));\r\n        console.log(authority);\r\n        dispatch({type: \"setToken\", payload: {token, token_expires, authority}});\r\n        return data;\r\n    },\r\n    /* eslint-disable */\r\n    async getMenus({state: {authority}, dispatch}, payload) {\r\n        //todo  get from service\r\n        const menus = [\r\n            {title: '首页', icon: 'index', path: '/index', exact: true, component: IndexHome},\r\n            {title: '团队管理', icon: 'team', path: '/index/team', component: IndexTeam, authority: 'team'},\r\n            {title: '商品管理', icon: 'shopping', path: '/index/goods', component: IndexGoods, authority: 'goods'},\r\n        ];\r\n        const keys = Object.keys(authority);\r\n        return menus.map(menu => {\r\n            if (!menu.authority || keys.includes(menu.authority)) return menu;\r\n        }).filter(menu => menu);\r\n\r\n\r\n    },\r\n    /* eslint-enable */\r\n\r\n    async createShop(state,shop) {\r\n        let {data} = await main.post('/admin/shop', shop);\r\n        return data;\r\n    }\r\n\r\n\r\n}\r\n","export default {\r\n\r\n    setToken(state, payload) {\r\n        return {...state, ...payload};\r\n    }\r\n\r\n}","import React, {useReducer} from 'react'\r\nimport initState from \"./state\";\r\nimport actions from \"./actions\";\r\nimport reducers from \"./reducers\";\r\n\r\nexport const ctx = React.createContext({});\r\n\r\nfunction reducerWraper(state, action) {\r\n    let {type, payload} = action;\r\n    return reducers[type](state, payload);\r\n}\r\n\r\nexport default (props) => {\r\n\r\n    const [state, dispatch] = useReducer(reducerWraper, initState);\r\n\r\n    function useMapAction(name) {\r\n        const action = actions[name];\r\n        return (payload) => action({state, dispatch}, payload);\r\n\r\n    }\r\n\r\n    function useMapReducer(name) {\r\n        return (payload) => dispatch({type: name, payload});\r\n    }\r\n\r\n    // function useMapSate(name) {\r\n    // const value = useContext(Context);\r\n    //     return value[name];\r\n    //\r\n    // }\r\n\r\n    return (\r\n        <ctx.Provider value={{state, useMapAction, useMapReducer}}>\r\n            {props.children}\r\n        </ctx.Provider>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useContext} from 'react';\r\nimport {Card, Form, Input, Button} from 'antd';\r\nimport {ctx} from '../../src/store'\r\nimport rules from '../rules'\r\n\r\n\r\nconst Login = (props) => {\r\n    let {history} = props;\r\n    let {getFieldDecorator, validateFields} = props.form;\r\n    let {username, password} = rules;\r\n    let {useMapAction} = useContext(ctx);\r\n    let register = useMapAction('register');\r\n    let login = useMapAction('login');\r\n\r\n    function reg() {\r\n        validateFields((error, values) => {\r\n            console.log('error', error);\r\n            console.log('values', values);\r\n            register(values).then(({err, res}) => {\r\n                console.log(\"register\", res);\r\n                if (err) alert(res);\r\n                else alert(res + '请登录');\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    function log() {\r\n        validateFields((error, values) => {\r\n            login(values).then(({err, res}) => {\r\n                if (!err) history.push('/index');\r\n                else alert(res);\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <Card title=\"登录\" className=\"dialog\">\r\n            <Form>\r\n                <Form.Item>\r\n                    {getFieldDecorator('username', {\r\n                        rules: username\r\n                    })(\r\n                        <Input type=\"text\" placeholder=\"请输入用户名\"/>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    {getFieldDecorator('password', {\r\n                        rules: password\r\n                    })(\r\n                        <Input type=\"password\" placeholder=\"请输入密码\"/>\r\n                    )}\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" onClick={() => log()}>登录</Button>\r\n                    <Button type=\"default\" onClick={() => reg()}>注册</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Form.create()(Login)\r\n\r\n\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {Layout, Menu, Icon} from \"antd\";\r\nimport {ctx} from '../../src/store';\r\n\r\nconst {Sider, Content, Footer} = Layout;\r\n\r\n\r\nexport default (props) => {\r\n    let {history, location} = props;\r\n    const {useMapAction} = useContext(ctx);\r\n    const getMenus = useMapAction('getMenus');\r\n    const [menus, setMenus] = useState([]);\r\n    /* eslint-disable */\r\n    useEffect(() => {\r\n        getMenus().then(menus => setMenus(menus));\r\n    }, []);\r\n    /* eslint-enable */\r\n    return (\r\n        <Layout style={{minHeight: '100vh'}}>\r\n            <Sider collapsible>\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={[location.pathname]}\r\n                    onClick={ev => history.push(ev.key)}\r\n                >\r\n                    {menus.map(menu => (\r\n                        <Menu.Item key={menu.path}>\r\n                            <Icon type={menu.icon}/>\r\n                            <span>{menu.title}</span>\r\n                        </Menu.Item>\r\n                    ))}\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Content>\r\n                    <Switch>\r\n                        {menus.map(menu => (\r\n                            <Route\r\n                                key={menu.path}\r\n                                path={menu.path}\r\n                                exact={menu.exact}\r\n                                component={menu.component}\r\n                            />\r\n                        ))}\r\n                    </Switch>\r\n                </Content>\r\n                <Footer style={{textAlign: 'center'}}>\r\n                    xxx公司版权所有\r\n                </Footer>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport State from './store/index';\nimport App from \"./App\";\nmoment.locale('zh-cn');\n\nReactDOM.render(\n    <State>\n        <Router>\n            <Route component={App}>\n            </Route>\n        </Router>\n    </State>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {useEffect, useContext} from 'react';\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {ctx} from './store';\r\nimport Login from './pages/Login';\r\nimport Index from \"./pages/Index\";\r\n\r\nexport default (props) => {\r\n    console.log('app');\r\n    let {history} = props;\r\n    let {state: {token}} = useContext(ctx);\r\n    /* eslint-disable */\r\n    useEffect(() => {\r\n        if (!token) history.push('/login');\r\n        else history.push('/index');\r\n    }, []);\r\n    /* eslint-enable */\r\n    return (\r\n\r\n        <Switch>\r\n            <Route key={'index'} path={'/index'} component={Index}/>\r\n            <Route key={'login'} path={'/login'} component={Login}/>\r\n        </Switch>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\n"],"sourceRoot":""}